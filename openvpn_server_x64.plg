<?xml version='1.0' standalone='yes'?>

<!DOCTYPE PLUGIN [
<!ENTITY plgver "2.0.9">
]>

<PLUGIN>

<!--
2013-07-06 - Initial Release
openvpnserver version 2 64Bit
-->

<FILE Name="/boot/packages/tcl-8.6.1-x86_64-1.txz" Run="upgradepkg --install-new">
<URL>ftp://ftp.sunet.se/pub/os/Linux/distributions/slackware//slackware64-14.1/slackware64/tcl/tcl-8.6.1-x86_64-1.txz</URL>
<MD5>81a2ee6b801ff63a0b96ac8239fc9f26</MD5>
</FILE>

<FILE Name="/boot/packages/expect-5.44.1.15-x86_64-2.txz" Run="upgradepkg --install-new">
<URL>ftp://ftp.sunet.se/pub/os/Linux/distributions/slackware//slackware64-14.1/slackware64/tcl/expect-5.44.1.15-x86_64-2.txz</URL>
<MD5>ba1415d7928ade48de4d17c74d65a7a1</MD5>
</FILE>

<FILE Name="/boot/packages/openvpn-2.3.2-x86_64-1.txz" Run="upgradepkg --install-new">
<URL>ftp://ftp.sunet.se/pub/os/Linux/distributions/slackware//slackware64-14.1/slackware64/n/openvpn-2.3.2-x86_64-1.txz</URL>
<MD5>efabea515e52b8aed23ee35c41fc52eb</MD5>
</FILE>

<FILE Name="/boot/packages/infozip-6.0-x86_64-2.txz" Run="upgradepkg --install-new">>
<URL>ftp://ftp.sunet.se/pub/os/Linux/distributions/slackware//slackware64-14.1/slackware64/a/infozip-6.0-x86_64-2.txz</URL>
<MD5>9fc6fcedc67a27dd555e64575847fb7b</MD5>
</FILE>


<FILE Name="/boot/packages/lzo-2.03-x86_64-1.txz" Run="upgradepkg --install-new">
<URL>ftp://ftp.sunet.se/pub/os/Linux/distributions/slackware//slackware64-14.1/slackware64/l/lzo-2.03-x86_64-1.txz</URL>
<MD5>d55f381c25cda96b274f36cf41be1575</MD5>
</FILE>

<FILE Name="/boot/packages/iproute2-3.10.0-x86_64-2.txz" Run="upgradepkg --install-new">
<URL>ftp://ftp.sunet.se/pub/os/Linux/distributions/slackware//slackware64-14.1/slackware64/n/iproute2-3.10.0-x86_64-2.txz</URL>
<MD5>22156ad2743433beb6bc7a7e3dff8124</MD5>
</FILE>

<FILE Name="/boot/config/plugins/openvpnserver/Device_status.png">
<URL>--no-check-certificate http://lime-technology.com/wiki/images/9/97/Device_status.png</URL>
</FILE>

<FILE Name="/boot/config/plugins/openvpnserver/New_config.png">
<URL>--no-check-certificate http://lime-technology.com/wiki/images/b/b3/New_config.png</URL>
</FILE>

<FILE Name="/boot/config/plugins/openvpnserver/Information.png">
<URL>--no-check-certificate http://lime-technology.com/wiki/images/5/54/Information.png</URL>
</FILE>

<FILE Name="/boot/config/plugins/openvpnserver/Openvpn.png">
<URL>--no-check-certificate http://lime-technology.com/wiki/images/2/2f/Openvpn.png</URL>
</FILE>

<FILE Name="/boot/config/plugins/openvpnserver/Ovpntech_logo-s_REVISED.png">
<URL>--no-check-certificate http://lime-technology.com/wiki/images/8/88/Ovpntech_logo-s_REVISED.png</URL>
</FILE>

############################################
# cleanup file
############################################
<FILE Name="/var/local/emhttp/plugins/openvpnserver/openvpnserver-cleanup" Run="/bin/bash">
<INLINE>
<![CDATA[
# Cleanup previous plugin installation
[ -f /etc/rc.d/rc.openvpnserver ] && rm --force /etc/rc.d/rc.openvpnserver
[ -d /usr/local/emhttp/plugins/openvpnserver ] && rm --force --recursive /usr/local/emhttp/plugins/openvpnserver
rm -rf /var/local/emhttp/plugins/openvpnserver
rm -rf /var/run/openvpnserver
rm -rf /var/log/openvpnserver.log
rm -rf /var/log/plugins/openvpnserver
rm -rf /dev/net
mkdir /dev/net
mknod /dev/net/tun c 10 200
echo 1 > /proc/sys/net/ipv4/ip_forward
rm -f /var/local/emhttp/plugins/openvpnserver/openvpnserver-cleanup
]]>
</INLINE>
</FILE>

<FILE Name="/var/local/emhttp/plugins/openvpnserver/check-my-ip.sh" Mode="0770">
<INLINE>
<![CDATA[
# Check my IP script
#!/bin/bash
]]>
#curl -s --max-time 10 --silent http://geoip.hidemyass.com/ip/
#curl -s --max-time 10 --silent http://my-ip-address.com/  | grep "Your IP is"
#curl -s  --max-time 10 --silent http://myip.dk/  | grep "IP Address:"
#curl -s --max-time 10 --silent http://checkmyip.org/ | grep "Your IP address"
#curl -s --max-time 10 --silent http://www.whereisip.net/ | grep "Locating IP Address"
#curl --max-time 10 --silent ifconfig.me/ip
#curl --max-time 10 --silent icanhazip.com
#curl --max-time 10 --silent http://ipecho.net/plain
#wget -qO- http://ipecho.net/plain
curl -s --max-time 10 --silent checkip.dyndns.org | grep -Eo '[0-9\.]+'
#wget -q -O - -q --tries=2 --timeout=5 checkip.dyndns.org | sed -e 's/[^[:digit:]\|.]//g'
#wget http://www.ipchicken.com -O - -o /dev/null | grep -A 1 0000FF|grep br|awk '{print $1}'
###wget http://snoopmyip.com/ -O - -o /dev/null | grep -A 1 "My Proxy:"|grep ":"|awk '{print $3}'
##http://www.canyouseeme.org/

</INLINE>
</FILE>

<FILE Name="/var/local/emhttp/plugins/openvpnserver/temp.txt" Mode="0770">
<INLINE>
<![CDATA[
]]>
</INLINE>
</FILE>

<FILE Name="/var/run/openvpnserver/temp.txt" Mode="0770">
<INLINE>
<![CDATA[
]]>
</INLINE>
</FILE>

<FILE Name="/boot/config/plugins/openvpnserver/openvpnserver.cfg">
<INLINE>
<![CDATA[
# openvpnserver plugin configuration
INSTALL_ON_BOOT="disable"
DISCONNECT_ON_UMOUNT="no"
SERVER_PATH=/mnt/cache/server
SERVER_MODE=tun
NETWORK=10.8.0.0
NETMASK=255.255.255.0
SERVER_PORT=1194
CANONICAL=""
PROTOCOL=udp
CHIPHER=""
CLIENT="Enable"
HASH_ALGO=""
GATEWAY="Disable"
SUBNET="Disable"
LAN_SUBNET="Enable"
COMP_LZO="comp-lzo"
IPP="ipp.txt"
DHCP_1="dhcp-option DNS 8.8.8.8"
DHCP_2=""
TELNET_CONSOLE="no"
]]>
</INLINE>
</FILE>

<FILE Name="/boot/config/plugins/openvpnserver/openvpnserver_cert.cfg">
<INLINE>
<![CDATA[
# openvpnserver plugin configuration for certs
KEY_COUNTRY=DE
KEY_PROVINCE=ELSEWHERE
KEY_CITY=NOWHERE
KEY_ORG=IT-DIVISION
KEY_EMAIL=root@server.com
KEY_PATH=/mnt/cache/openvpnserver_cert
]]>
</INLINE>
</FILE>

############################################
# rc.openvpnserver file
############################################
<FILE Name="/etc/rc.d/rc.openvpnserver" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/sh

openvpnserver_cert_updatecfg()
{
# Arguments file used for WEBUI configuration update
  ARGUMENTS_FILE="/usr/local/emhttp/plugins/openvpnserver/openvpnserver_cert.args"

  [ -f $ARGUMENTS_FILE ] && source $ARGUMENTS_FILE

KEY_COUNTRY=$KEY_COUNTRY_NEW
KEY_PROVINCE=$KEY_PROVINCE_NEW
KEY_CITY=$KEY_CITY_NEW
KEY_ORG=$KEY_ORG_NEW
KEY_EMAIL=$KEY_EMAIL_NEW
KEY_PATH=$KEY_PATH_NEW

  write_cfg_cert
  
}

#################
# W R I T E C F G
#################
write_cfg_cert()
{ 
  echo "# openvpnserver plugin configuration file for the certs" > /boot/config/plugins/openvpnserver/openvpnserver_cert.cfg

  echo "KEY_COUNTRY=\"$KEY_COUNTRY\"" >> /boot/config/plugins/openvpnserver/openvpnserver_cert.cfg
  echo "KEY_PROVINCE=\"$KEY_PROVINCE\"" >> /boot/config/plugins/openvpnserver/openvpnserver_cert.cfg
  echo "KEY_CITY=\"$KEY_CITY\"" >> /boot/config/plugins/openvpnserver/openvpnserver_cert.cfg
  echo "KEY_ORG=\"$KEY_ORG\"" >> /boot/config/plugins/openvpnserver/openvpnserver_cert.cfg
  echo "KEY_EMAIL=\"$KEY_EMAIL\"" >> /boot/config/plugins/openvpnserver/openvpnserver_cert.cfg
  echo "KEY_PATH=\"$KEY_PATH\"" >> /boot/config/plugins/openvpnserver/openvpnserver_cert.cfg

  logger -trc.openvpnserver -plocal7.info -is "Plugin configuration for certs written"
}

openvpnserver_updatecfg()
{
# Arguments file used for WEBUI configuration update
  ARGUMENTS_FILE="/usr/local/emhttp/plugins/openvpnserver/openvpnserver.args"

  [ -f $ARGUMENTS_FILE ] && source $ARGUMENTS_FILE

INSTALL_ON_BOOT=$INSTALL_ON_BOOT_NEW
DISCONNECT_ON_UMOUNT=$DISCONNECT_ON_UMOUNT_NEW
SERVER_PATH=$SERVER_PATH_NEW
SERVER_MODE=$SERVER_MODE_NEW
NETWORK=$NETWORK_NEW
NETMASK=$NETMASK_NEW
SERVER_PORT=$SERVER_PORT_NEW
CANONICAL=$CANONICAL_NEW
PROTOCOL=$PROTOCOL_NEW
CHIPHER=$CHIPHER_NEW
CLIENT=$CLIENT_NEW
HASH_ALGO=$HASH_ALGO_NEW
GATEWAY=$GATEWAY_NEW
SUBNET=$SUBNET_NEW
LAN_SUBNET=$LAN_SUBNET_NEW
COMP_LZO=$COMP_LZO_NEW
IPP=$IPP_NEW
DHCP_1=$DHCP_1_NEW
DHCP_2=$DHCP_2_NEW
TELNET_CONSOLE=$TELNET_CONSOLE_NEW

  write_cfg
  
}

#################
# W R I T E C F G
#################
write_cfg()
{ 
  echo "# openvpnserver plugin configuration file" > /boot/config/plugins/openvpnserver/openvpnserver.cfg
  echo "INSTALL_ON_BOOT=\"$INSTALL_ON_BOOT\"" >> /boot/config/plugins/openvpnserver/openvpnserver.cfg
  echo "DISCONNECT_ON_UMOUNT=\"$DISCONNECT_ON_UMOUNT\"" >> /boot/config/plugins/openvpnserver/openvpnserver.cfg
  echo "SERVER_PATH=$SERVER_PATH" >> /boot/config/plugins/openvpnserver/openvpnserver.cfg
  echo "SERVER_MODE=$SERVER_MODE" >> /boot/config/plugins/openvpnserver/openvpnserver.cfg
  echo "NETWORK=$NETWORK" >> /boot/config/plugins/openvpnserver/openvpnserver.cfg
  echo "NETMASK=$NETMASK" >> /boot/config/plugins/openvpnserver/openvpnserver.cfg
  echo "SERVER_PORT=$SERVER_PORT" >> /boot/config/plugins/openvpnserver/openvpnserver.cfg
  echo "CANONICAL=$CANONICAL" >> /boot/config/plugins/openvpnserver/openvpnserver.cfg
  echo "PROTOCOL=$PROTOCOL" >> /boot/config/plugins/openvpnserver/openvpnserver.cfg
  echo "CHIPHER=\"$CHIPHER\"" >> /boot/config/plugins/openvpnserver/openvpnserver.cfg
  echo "CLIENT=\"$CLIENT\"" >> /boot/config/plugins/openvpnserver/openvpnserver.cfg
  echo "HASH_ALGO=\"$HASH_ALGO\"" >> /boot/config/plugins/openvpnserver/openvpnserver.cfg
  echo "GATEWAY=\"$GATEWAY\"" >> /boot/config/plugins/openvpnserver/openvpnserver.cfg
  echo "SUBNET=\"$SUBNET\"" >> /boot/config/plugins/openvpnserver/openvpnserver.cfg
  echo "LAN_SUBNET=\"$LAN_SUBNET\"" >> /boot/config/plugins/openvpnserver/openvpnserver.cfg
  echo "COMP_LZO=\"$COMP_LZO\"" >> /boot/config/plugins/openvpnserver/openvpnserver.cfg  
  echo "IPP=\"$IPP\"" >> /boot/config/plugins/openvpnserver/openvpnserver.cfg
  echo "DHCP_1=\"$DHCP_1\"" >> /boot/config/plugins/openvpnserver/openvpnserver.cfg
  echo "DHCP_2=\"$DHCP_2\"" >> /boot/config/plugins/openvpnserver/openvpnserver.cfg
  echo "TELNET_CONSOLE=\"$TELNET_CONSOLE\"" >> /boot/config/plugins/openvpnserver/openvpnserver.cfg
  

  logger -trc.openvpnserver -plocal7.info -is "Plugin configuration written"
}

openvpnserver_start()
{
	rm -f /var/local/emhttp/plugins/openvpnserver/add_client.log
	
if [ ! -f /var/run/openvpnserver/openvpnserver.pid ]; then
    echo "Starting Openvpn server....."
		source /boot/config/plugins/openvpnserver/openvpnserver.cfg
		echo "sudo openvpn --writepid /var/run/openvpnserver/openvpnserver.pid --config $SERVER_PATH/openvpnserver.ovpn --script-security 2 --daemon 2>&1 &" > /var/local/emhttp/plugins/openvpnserver/openvpnserver.sh
		chmod 777 /var/local/emhttp/plugins/openvpnserver/openvpnserver.sh
		sleep 0.5
		nohup /var/local/emhttp/plugins/openvpnserver/openvpnserver.sh > /var/local/emhttp/plugins/openvpnserver/openvpnserver.out /dev/null & 
		sleep 1
		echo "OK... Started" 
 else
    echo "Server already started"
 fi
}

openvpnserver_stop()
{
  if [ -e /var/run/openvpnserver/openvpnserver.pid ]; then
     echo "Stoping Openvpnserver....."
	   kill $(cat /var/run/openvpnserver/openvpnserver.pid)
	   sleep 2
	   rm -f /var/run/openvpnserver/openvpnserver.pid
	   rm -rf /var/local/emhttp/plugins/openvpnserver/openvpnserver.out
	   rm -rf /var/log/openvpnserver.log
	   rm -rf /var/log/openvpnserver-status.log
	   echo "... Stopped"
  else
     echo "Server already stoped"
  fi
}

write_openvpn_conf()
{
#Writing server configuration file : openvpnserver.ovpn	
source /boot/config/plugins/openvpnserver/openvpnserver.cfg
source /boot/config/plugins/openvpnserver/openvpnserver_cert.cfg

if [ -e $SERVER_PATH ]; then
	chmod 755 $SERVER_PATH
else
	mkdir -p $SERVER_PATH
	chmod 755 $KEY_DIR	
fi

echo "server $NETWORK $NETMASK" > $SERVER_PATH/openvpnserver.ovpn
echo "dev $SERVER_MODE" >> $SERVER_PATH/openvpnserver.ovpn
echo "port $SERVER_PORT" >> $SERVER_PATH/openvpnserver.ovpn
echo "proto $PROTOCOL" >> $SERVER_PATH/openvpnserver.ovpn
echo "dh $SERVER_PATH/dh2048.pem" >> $SERVER_PATH/openvpnserver.ovpn

if [[ -f "$KEY_PATH/keys/crl.pem" ]]; then
	echo "crl-verify $KEY_PATH/keys/crl.pem" >> $SERVER_PATH/openvpnserver.ovpn
	echo "command 'crl-verify' was added!"
else
	echo "file crl.pem NOT FOUND"
fi

echo "ca $SERVER_PATH/ca.crt" >> $SERVER_PATH/openvpnserver.ovpn
echo "cert $SERVER_PATH/server.crt" >> $SERVER_PATH/openvpnserver.ovpn
echo "key $SERVER_PATH/server.key" >> $SERVER_PATH/openvpnserver.ovpn

if [ "$GATEWAY" != "Disable" ]; then
    echo "push "\"$GATEWAY"\"" >> $SERVER_PATH/openvpnserver.ovpn
fi

if [ "$IPP" == "ipp.txt" ]; then  
	echo "ifconfig-pool-persist "$SERVER_PATH/$IPP >> $SERVER_PATH/openvpnserver.ovpn
fi

if [ "$DHCP_1" != "" ]; then
	echo "push "\"$DHCP_1"\"" >> $SERVER_PATH/openvpnserver.ovpn
fi

if [ "$DHCP_2" != "" ]; then
	echo "push "\"$DHCP_2"\"" >> $SERVER_PATH/openvpnserver.ovpn
fi

echo "tls-server" >> $SERVER_PATH/openvpnserver.ovpn
#echo "ns-cert-type server" >> $SERVER_PATH/openvpnserver.ovpn
echo "verb 3" >> $SERVER_PATH/openvpnserver.ovpn
echo "tls-auth $SERVER_PATH/ta.key 0" >> $SERVER_PATH/openvpnserver.ovpn
echo "persist-key" >> $SERVER_PATH/openvpnserver.ovpn
echo "persist-tun" >> $SERVER_PATH/openvpnserver.ovpn
echo "keepalive 10 120" >> $SERVER_PATH/openvpnserver.ovpn

echo "user nobody" >> $SERVER_PATH/openvpnserver.ovpn
echo "group users" >> $SERVER_PATH/openvpnserver.ovpn

#echo "mute 5" >> $SERVER_PATH/openvpnserver.ovpn

if [ "$CHIPHER" != "" ]; then    
	echo "$CHIPHER" >> $SERVER_PATH/openvpnserver.ovpn
fi

if [ "$CLIENT" != "" ]; then    
	echo "client-to-client" >> $SERVER_PATH/openvpnserver.ovpn
fi

if [ "$HASH_ALGO" != "" ]; then

	echo "$HASH_ALGO" >> $SERVER_PATH/openvpnserver.ovpn
fi

if [ "$COMP_LZO" != "0" ]; then

	echo "$COMP_LZO" >> $SERVER_PATH/openvpnserver.ovpn
fi

if [ "$SUBNET" = "topology subnet" ]; then    
	echo "$SUBNET" >> $SERVER_PATH/openvpnserver.ovpn
fi

if [ "$LAN_SUBNET" = "Enable" ]; then    
	LANSUBNET=$(/etc/rc.d/rc.openvpnserver get_subnet)
	echo "push "\"route $LANSUBNET 255.255.255.0"\"" >> $SERVER_PATH/openvpnserver.ovpn
	echo "push "\"resolv-retry infinite"\"" >> $SERVER_PATH/openvpnserver.ovpn
fi

echo "status /var/log/openvpnserver-status.log 5" >> $SERVER_PATH/openvpnserver.ovpn
echo "log-append /var/log/openvpnserver.log" >> $SERVER_PATH/openvpnserver.ovpn
echo "status-version 2" >> $SERVER_PATH/openvpnserver.ovpn

if [ "$TELNET_CONSOLE" = "yes" ]; then
	SERVERIP=$(/etc/rc.d/rc.openvpnserver serverip)
	echo "management $SERVERIP 5902" >> $SERVER_PATH/openvpnserver.ovpn
fi

}

check_pem()
{ 
source /boot/config/plugins/openvpnserver/openvpnserver.cfg
source /boot/config/plugins/openvpnserver/openvpnserver_cert.cfg

	if [[ -f "$KEY_PATH/keys/crl.pem" ]] ; then
		if grep "crl-verify" $SERVER_PATH/openvpnserver.ovpn >/dev/null; then
			echo "OK"
		else
			echo "UPDATE"
		fi	
	fi
}

openvpnserver_get_def_gw()
{	
   #localgateway="`ip route show default | grep default | awk {'print $3'}`"
   GW=$(/sbin/ip route | awk '/default/ { print $3 }')
   echo $GW 
}

openvpnserver_get_subnet()
{  
   GW_SUB=$(/sbin/ip route | awk '/default/ { print $3 }')
   SUBNET_IP="${GW_SUB%.*}.0"
   echo $SUBNET_IP
}

openvpnserver_get_vpnserver()
{	
   VPN_SERVER=$( ifconfig tun0 | grep inet | awk '{print $2}')
   echo $VPN_SERVER 
}


openvpnserver_get_easy()
{
source /boot/config/plugins/openvpnserver/openvpnserver.cfg

if [ -e $SERVER_PATH ]; then	
	echo $SERVER_PATH
	chmod 755 $SERVER_PATH
else
	echo $SERVER_PATH
	mkdir -p $SERVER_PATH
	chmod 755 $KEY_DIR	
fi

cd $SERVER_PATH
#wget -O master.zip --no-check-certificate  https://github.com/OpenVPN/easy-rsa/archive/master.zip
#unzip -o master.zip
wget -O 2.x.zip --no-check-certificate https://github.com/OpenVPN/easy-rsa/archive/release/2.x.zip
unzip -o 2.x.zip
mv easy-rsa-release-2.x easy-rsa-master

#update the vars file with our own settings
openvpnserver_update_var 
}

openvpnserver_revoke_client()
{
source /boot/config/plugins/openvpnserver/openvpnserver.cfg
source /boot/config/plugins/openvpnserver/openvpnserver_cert.cfg
echo "Revoking client: " $1
	
cd $SERVER_PATH/easy-rsa-master/easy-rsa/2.0/

source ./vars
sleep 1
cd $KEY_DIR
$SERVER_PATH/easy-rsa-master/easy-rsa/2.0/revoke-full $1
}

openvpnserver_add_client()
{
#Clients config

echo "Adding client: " $1

source /boot/config/plugins/openvpnserver/openvpnserver.cfg
source /boot/config/plugins/openvpnserver/openvpnserver_cert.cfg

cd $SERVER_PATH/easy-rsa-master/easy-rsa/2.0/

PORT=$SERVER_PORT
CONF_DIR="$KEY_PATH"
KEY_DIR="$KEY_PATH/keys"
CLI_DIR="$KEY_PATH/clients"
LOG_DIR="/var/log/openvpnserver_cert"

## check if this client package already exists
if grep CN=$1 $KEY_DIR/index.txt; then
   echo "$1 alredy exist. try a different name!" >> /var/local/emhttp/plugins/openvpnserver/openvpnserver.out
   echo "$1 alredy exist. try a different name!"
   exit 1
fi


#REMOTE_ADDR=$(/etc/rc.d/rc.openvpnserver serverip)
INTERNET_IP=$(/var/local/emhttp/plugins/openvpnserver/check-my-ip.sh)

if [[ $CANONICAL != "" ]]; then
	INTERNET_IP=$CANONICAL
fi	

cd $SERVER_PATH/easy-rsa-master/easy-rsa/2.0/

source ./vars

cd $KEY_DIR
	
client=$1

#KEY_CN=$client KEY_EMAIL=$KEY_CN@acme $SERVER_PATH/easy-rsa-master/easy-rsa/2.0/pkitool $KEY_CN
KEY_CN=$client $SERVER_PATH/easy-rsa-master/easy-rsa/2.0/pkitool $client
	
# New client file creating

cat > $KEY_DIR/$client.ovpn <<END
remote $INTERNET_IP
$CHIPHER
$HASH_ALG
client
dev $SERVER_MODE
proto $PROTOCOL
port $PORT
resolv-retry infinite
tls-client
nobind
persist-key
persist-tun
ca ca.crt
cert $client.crt
key $client.key
tls-auth ta.key 1
remote-cert-tls server
$COMP_LZO
verb 3
route-delay 2
END
#*****END ****

 if [[ $2 == "" ]]; then
	zip $CLI_DIR/$client.zip $client.ovpn $client.crt $client.key ca.crt ta.key		
 fi

chmod -R 755 $KEY_PATH

  if [[ $2 != "" ]]; then  # this is for pkcs12 file (IOS ..)
		echo "#!/usr/bin/expect -f" > $KEY_DIR/pkcs12.sh
		echo "#! /bin/bash" >> $KEY_DIR/pkcs12.sh
		#echo "#exp_internal 1" >> $KEY_DIR/pkcs12.sh
		echo "spawn openssl pkcs12 -export -in $client.crt -inkey $client.key -certfile ca.crt -name $client -out $client.p12" >> $KEY_DIR/pkcs12.sh
		echo "expect \"Enter Export Password:\"" >> $KEY_DIR/pkcs12.sh
		echo "send \"$2\r\"" >> $KEY_DIR/pkcs12.sh
		echo "sleep 1" >> $KEY_DIR/pkcs12.sh
		echo "expect \"Verifying - Enter Export Password:\"" >> $KEY_DIR/pkcs12.sh
		echo "send \"$2\r\"" >> $KEY_DIR/pkcs12.sh
		echo "sleep 1" >> $KEY_DIR/pkcs12.sh
		echo "expect eof" >> $KEY_DIR/pkcs12.sh
				
		sleep 0.5

		chmod a+x pkcs12.sh
		sleep 0.5		
		#execute above script
		nohup sudo $KEY_DIR/pkcs12.sh >> /var/local/emhttp/plugins/openvpnserver/openvpnserver.out /dev/null
		
		sleep 7		

		#modify the client ovpn file to work with IOS
				
		echo "Update $client.ovpn to be used with IOS"
				
		sed -i '/ntls-auth ta.key 1/d' $client.ovpn		
		sed -i '/ca ca.crt/d' $client.ovpn
		sed -i '/key/d' $client.ovpn
		sed -i '/cert/d' $client.ovpn

		echo "<ca>" >> $client.ovpn
		cat ca.crt >> $client.ovpn
		echo "</ca>" >> $client.ovpn
		
		echo "key-direction 1" >> $client.ovpn
		echo "<tls-auth>" >> $client.ovpn
		cat ta.key >> $client.ovpn
		echo "</tls-auth>" >> $client.ovpn
				
		sleep 1
		cd $KEY_DIR/
				
		#make a readme file with password and instructions to below zip file
		echo "Password for the cert: $2" > README.txt
		echo "" >> README.txt
		echo "Next step is to bring this file to our mobile device. Send an e-mail to yourself with the .p12 file attached." >> README.txt
		echo "Since the file is password protected, it is safe to e-mail." >> README.txt
		echo "" >> README.txt
		echo "When you open the e-mail on your mobile device, and click the .p12 attachment you will be asked to install the certificate. Click install and confirm installation." >> README.txt
		echo "If your device has a passcode, you will be asked to enter it. Afterwards, you need to type the password you choose when generating the p12 file." >> README.txt
		echo "iOS mentions the certificate is Not Trusted. Dont worry, its fine." >> README.txt
		echo "" >> README.txt	
		echo "Your certificate is now installed on iOS and it is ready to be used by the OpenVPN app." >> README.txt
		echo "" >> README.txt
	        echo "e-mail the ovpn file to yourself as well. The e-mail app on iOS will allow you to import this configuration to the OpenVPN app by clicking on the file." >> README.txt 
		echo "The OpenVPN app will show your imported configuration. Confirm by tapping the  green + icon." >> README.txt
		echo "Next step, select the certificate to use with this profile. Here you will select the certificate we imported into iOS in the previous step." >> README.txt
		
		sleep 1
		sudo chmod 400 {$client.p12,$client.ovpn,README.txt}
		echo "Creating a zip file for the client"	
		zip $CLI_DIR/$client.zip $client.p12 $client.ovpn README.txt				
  fi
}	
	
openvpnserver_create_server_cert()
{
source /boot/config/plugins/openvpnserver/openvpnserver.cfg
source /boot/config/plugins/openvpnserver/openvpnserver_cert.cfg

cd $SERVER_PATH/easy-rsa-master/easy-rsa/2.0/

#OpenVPN common vars

PORT=$SERVER_PORT
KEY_SIZE=2048
CA_EXPIRE=3650
KEY_EXPIRE=3650
KEY_COUNTRY=$KEY_COUNTRY
KEY_PROVINCE=$KEY_PROVINCE
KEY_CITY=$KEY_CITY
KEY_ORG=$KEY_ORG
KEY_EMAIL=$KEY_EMAIL
#Clients config
CONF_DIR="$KEY_PATH"
KEY_DIR="$KEY_PATH/keys"
CLI_DIR="$KEY_PATH/clients"
LOG_DIR="/var/log/openvpnserver_cert"

if [ -e $KEY_PATH ]; then
	rm -rf $KEY_PATH
	mkdir -p $KEY_PATH
	chmod 755 $KEY_PATH
else
	mkdir -p $KEY_PATH
	chmod 755 $KEY_PATH
fi

if [ -e $KEY_DIR ]; then
	rm -rf $KEY_DIR
	mkdir -p $KEY_DIR
	chmod 755 $KEY_DIR
else
	mkdir -p $KEY_DIR
	chmod 755 $KEY_DIR	
fi

if [ -e $CLI_DIR ]; then
	rm -rf $CLI_DIR
	mkdir -p $CLI_DIR
	chmod 755 $CLI_DIR
else
	mkdir -p $CLI_DIR
	chmod 755 $CLI_DIR
fi

sleep 2

##1.0.1 version of OpenSSL libraries, you will need to duplicate the easyrsa configuration 
##with a new name. Simply copy and run it in your terminal:
##cp openssl-1.0.0.cnf openssl-$(openssl version | awk '{print $2}').cnf

source ./vars
./clean-all
./build-dh
./pkitool --initca 
./pkitool --server server

sleep 1

cd $KEY_DIR
/usr/sbin/openvpn --genkey --secret ta.key
sleep 0.5
#sudo chmod 600 ta.key
sudo chmod 400 {server.key,server.crt,ca.crt,ta.key}

#This command will generate an OpenVPN static key and write it to the file ta.key.
#This key should be copied over a pre-existing secure channel to the server and all client machines
sleep 1

cp $KEY_DIR/ca.crt $SERVER_PATH
cp $KEY_DIR/dh2048.pem $SERVER_PATH
cp $KEY_DIR/server.crt $SERVER_PATH
cp $KEY_DIR/server.key $SERVER_PATH
cp $KEY_DIR/ta.key $SERVER_PATH

chmod -R 755 $KEY_PATH ## This migh tbe change to something else!!

# ********  END server cert creatings **********************
}

openvpnserver_update_var()
{
source /boot/config/plugins/openvpnserver/openvpnserver.cfg
source /boot/config/plugins/openvpnserver/openvpnserver_cert.cfg

#OpenVPN common vars

PORT=$SERVER_PORT
KEY_SIZE=2048
CA_EXPIRE=3650
KEY_EXPIRE=3650
KEY_COUNTRY=$KEY_COUNTRY
KEY_PROVINCE=$KEY_PROVINCE
KEY_CITY=$KEY_CITY
KEY_ORG=$KEY_ORG
KEY_EMAIL=$KEY_EMAIL
KEY_DIR="$KEY_PATH/keys"

cd $SERVER_PATH/easy-rsa-master/easy-rsa/2.0/

# romove original settings in vars
sed -i '/export KEY_COUNTRY="US"/d' $SERVER_PATH/easy-rsa-master/easy-rsa/2.0/vars
sed -i '/export KEY_PROVINCE="CA"/d' $SERVER_PATH/easy-rsa-master/easy-rsa/2.0/vars
sed -i '/export KEY_CITY="SanFrancisco"/d' $SERVER_PATH/easy-rsa-master/easy-rsa/2.0/vars
sed -i '/export KEY_ORG="Fort-Funston"/d' $SERVER_PATH/easy-rsa-master/easy-rsa/2.0/vars
sed -i '/export KEY_EMAIL="me@myhost.mydomain"/d' $SERVER_PATH/easy-rsa-master/easy-rsa/2.0/vars
sed -i '/export KEY_EMAIL="mail@host.domain"/d' $SERVER_PATH/easy-rsa-master/easy-rsa/2.0/vars
sed -i '/changeme/d' $SERVER_PATH/easy-rsa-master/easy-rsa/2.0/vars
sed -i '/export PKCS11_PIN=1234/d' $SERVER_PATH/easy-rsa-master/easy-rsa/2.0/vars
sed -i '/export KEY_DIR/d' $SERVER_PATH/easy-rsa-master/easy-rsa/2.0/vars
sed -i '/export KEY_OU/d' $SERVER_PATH/easy-rsa-master/easy-rsa/2.0/vars
sed -i '/export KEY_SIZE/d' $SERVER_PATH/easy-rsa-master/easy-rsa/2.0/vars

sleep 1

# add new settings
echo "export KEY_SIZE="2048""  >> vars
echo "export KEY_DIR=\"$KEY_DIR\" " >> vars
echo "export CA_EXPIRE=$CA_EXPIRE " >> vars
echo "export KEY_EXPIRE=$KEY_EXPIRE " >> vars
echo "export KEY_COUNTRY=\"$KEY_COUNTRY\" " >> vars
echo "export KEY_PROVINCE=\"$KEY_PROVINCE\" " >> vars
echo "export KEY_CITY=\"$KEY_CITY\" " >> vars
echo "export KEY_ORG=\"$KEY_ORG\" " >> vars
echo "export KEY_EMAIL=\"$KEY_EMAIL\" " >> vars
echo "export KEY_NAME=\"EasyRSA\" " >> vars
echo "export KEY_OU=\"VPN-CLIENT\" " >> vars
echo "The vars file was updated successful!!"

}

openvpnserver_getver()
{
  if [[ ! -z $1 ]]; then
    openvpnserver_plgver $1
  else
    echo "usage $0 getver local|remote"
  fi
}

openvpnserver_plgver()
{
 case "$1" in
 'local')
   if [ -f /boot/config/plugins/openvpn_server_x64.plg ]; then
      VERSION=$(grep "<\!ENTITY plgver" /boot/config/plugins/openvpn_server_x64.plg | cut -d\" -f2)
   else
      VERSION=Unknown
   fi
  ;;
   'remote')
     VERSION=$(wget --no-check-certificate -q https://raw.github.com/petersm1/openvpn_server_x64/master/openvpn_server_x64.plg -O - | grep "<\!ENTITY plgver" | cut -d\" -f2)
      if [ "$VERSION" == "" ]; then
        VERSION=Unknown
      fi
    ;;
  esac
  echo -n "$VERSION"
}

server_IP()
{
	IP=$(ip route get 8.8.8.8 | awk '/8.8.8.8/ {print $NF}')
	echo $IP
}
 
openvpnserver_updateplg()
{
 cd /boot/config/plugins
   [ -f openvpn_server_x64.plg.old ] && rm -f openvpn_server_x64.plg.old
    openvpnserver_stop;

   if [ -f openvpn_server_x64.plg ]; then
	   mv openvpn_server_x64.plg openvpn_server_x64.plg.old
	   echo "Updating plugin"
	   wget -q --no-check-certificate https://github.com/petersm1/openvpn_server_x64/raw/master/openvpn_server_x64.plg
	   /usr/local/sbin/installplg /boot/config/plugins/openvpn_server_x64.plg
    else
	    echo "Updating plugin"
	    wget -q --no-check-certificate https://github.com/petersm1/openvpn_server_x64/raw/master/openvpn_server_x64.plg
	    /usr/local/sbin/installplg /boot/config/plugins/openvpn_server_x64.plg
           openvpnserver_start;
   fi
}

openvpnserver_downgradeplg()
{
cd /boot/config/plugins
    if [ -f openvpn_server_x64.plg.old ]; then
      openvpnserver_stop;
	rm -f /openvpn_server_x64.plg
	mv openvpn_server_x64.plg.old openvpn_server_x64.plg
	echo "downgrading plugin"
	/usr/local/sbin/installplg /boot/config/plugins/openvpn_server_x64.plg
      openvpnserver_start;
    fi
} 
 
openvpnserver_getonlineversion()
{
  OPEN_VPN_HOSTING_SERVER="http://openvpn.net/index.php/open-source/downloads.html"
  OPEN_VPN_ONLINE_VER=$(wget ${OPEN_VPN_HOSTING_SERVER} -q --no-check-certificate -O - |grep "Change Log" | awk 'gsub(/.*OpenVPN | -- released on.*/,"")')
# original         OPEN_VPN_ONLINE_VER=$(wget ${OPEN_VPN_HOSTING_SERVER} -q --no-check-certificate -O - |grep "latest-stable" | awk 'gsub(/.*OpenVPN | -- released.*/,"")')
# original         echo $OPEN_VPN_ONLINE_VER
  echo "${OPEN_VPN_ONLINE_VER:0:6}"
}

openvpnserver_getlocalversion()
{
 if [ -e /usr/sbin/openvpn ];
   then
     OPEN_VPN_INSTALLED=$(openvpn --version | grep "OpenVPN " | awk 'gsub(/.*i4 | x.*/,"")')
     #echo $OPEN_VPN_INSTALLED
     echo "${OPEN_VPN_INSTALLED: -6}"
 fi
}

openvpnserver_view_online_user() {
VIEW_ONLINE_USER="` grep -P "CLIENT_LIST," /var/log/openvpnserver-status.log | sed -r 's/^[^,]+,+((,*[^,]+){1}).*/\1/' |  grep -Eiv "CLIENT_LIST"`"
if [ "$VIEW_ONLINE_USER" == "" ]
   then
      echo "NO CLIENTS CONECTED"
   else
      echo "$VIEW_ONLINE_USER"
fi
}

openvpnserver_list_valid_user(){
source /boot/config/plugins/openvpnserver/openvpnserver_cert.cfg

if [ -f $KEY_PATH/keys/index.txt ]; then
   VIEW_VALID_USER="`grep -P "V\t" $KEY_PATH/keys/index.txt | sed 's/.*CN=\(.*\)\/name.*/\1/g'  | grep -Eiv "server"`"
    if [ "$VIEW_VALID_USER" == "" ]
      then
        echo "NO CLIENTS CREATED YET"
      else
       echo "$VIEW_VALID_USER" 
    fi
fi 
}

openvpnserver_view_revoked_user() {
source /boot/config/plugins/openvpnserver/openvpnserver_cert.cfg

if [ -f $KEY_PATH/keys/index.txt ]; then
   VIEW_REVOKED_USER="`grep -P "R\t" $KEY_PATH/keys/index.txt | sed 's/.*CN=\(.*\)\/name.*/\1/g'`"
     if [ "$VIEW_REVOKED_USER" == "" ]
       then
         echo "NO CLIENTS REVOKED"
       else
        echo "$VIEW_REVOKED_USER"
     fi
fi

}

# read our configuration
source /boot/config/plugins/openvpnserver/openvpnserver.cfg

case "$1" in
  'updatecfg')
    openvpnserver_updatecfg
    ;;
  'updatecfg_cert')
    openvpnserver_cert_updatecfg
    ;;
  'start')
    openvpnserver_start
    ;;
  'stop')
    openvpnserver_stop
    ;;
  'writeconf')
    write_openvpn_conf
    ;;
  'download_easy-rsa')
    openvpnserver_get_easy
    ;;
  'create_server_cert')
    openvpnserver_create_server_cert
    ;;
  'getver')
    openvpnserver_getver $2 $3
    ;;
  'serverip')
    server_IP
    ;;
  'getonlineversion')
   openvpnserver_getonlineversion
   ;;
  'getlocalversion')
   openvpnserver_getlocalversion
   ;;  
  'updateplg')
   openvpnserver_updateplg
   ;;
  'downgradeplg')
   openvpnserver_downgradeplg
   ;;
  'get_gw')
   openvpnserver_get_def_gw
   ;;
   'get_subnet')
   openvpnserver_get_subnet
   ;;
  'get_vpnserver')
   openvpnserver_get_vpnserver
   ;;
   'add_client')
   openvpnserver_add_client $2 $3 $4
   ;;
   'revoke_client')
   openvpnserver_revoke_client $2 $3
   ;;
    'check_pem')
   check_pem
   ;;
    'view_valid_user')
   openvpnserver_list_valid_user
   ;;
    'view_online_user')
   openvpnserver_view_online_user
   ;;
    'view_revoked_user')
   openvpnserver_view_revoked_user
   ;;
   
  *)
    
    echo "usage $0 start|stop|download_easy-rsa|create_server_cert|add_client 'name'|add_client 'name' 'password|revoke_client 'name'|view_valid_user|view_online_user|view_revoked_user"
esac

]]>
</INLINE>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/openvpnserver/openvpnserver.page">
<INLINE>
Menu="NetworkServices"
Icon="Openvpn.png"
Version=&plgver;
Author="Peter_sm"
Type="php"
Title="OpenVPN Server"
</INLINE>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/openvpnserver/Device_status.png">
<LOCAL>/boot/config/plugins/openvpnserver/Device_status.png</LOCAL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/openvpnserver/New_config.pn">
<LOCAL>/boot/config/plugins/openvpnserver/New_config.png</LOCAL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/openvpnserver/Information.png">
<LOCAL>/boot/config/plugins/openvpnserver/Information.png</LOCAL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/openvpnserver/Openvpn.png">
<LOCAL>/boot/config/plugins/openvpnserver/Openvpn.png</LOCAL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/openvpnserver/Ovpntech_logo-s_REVISED.png">
<LOCAL>/boot/config/plugins/openvpnserver/Ovpntech_logo-s_REVISED.png</LOCAL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/openvpnserver/openvpnserver.php">
<INLINE>
<![CDATA[
<?PHP
$openvpnserver_cfg = parse_ini_file( "/boot/config/plugins/openvpnserver/openvpnserver.cfg");
$openvpnserver_cert_cfg = parse_ini_file( "/boot/config/plugins/openvpnserver/openvpnserver_cert.cfg");
$AUTO_SERVER_ADDR = shell_exec("/etc/rc.d/rc.openvpnserver serverip");
$VALID_USER = shell_exec("/etc/rc.d/rc.openvpnserver view_valid_user");
$ONLINE_USER = shell_exec("/etc/rc.d/rc.openvpnserver view_online_user");
$REVOKED_USER = shell_exec("/etc/rc.d/rc.openvpnserver view_revoked_user");
$openvpnserver_running = file_exists("/var/run/openvpnserver/openvpnserver.pid") ? "yes" : "no";
$openvpnserver_remoteplg = shell_exec("/etc/rc.d/rc.openvpnserver getver remote");
$openvpnserver_localplg = shell_exec("/etc/rc.d/rc.openvpnserver getver local");
$ovpncertsfolder = file_exists($openvpnserver_cert_cfg['KEY_PATH']) ? "yes" : "no";
$certsw = $openvpnserver_cfg['SERVER_PATH'] . "/easy-rsa-master";
$openvpnserver_rollback = file_exists( "boot/config/plugins/openvpn_server_x64.plg.old" ) ? "yes" : "no";
$ovpncertsoftware = file_exists($certsw) ? "yes" : "no";
$updates_exist = "false";
$ovpnfilename = $openvpnserver_cfg['SERVER_PATH'] . "/openvpnserver.ovpn";
$openvpnserver_config = file_exists($ovpnfilename) ? "yes" : "no";
$OPEN_VPN_ONLINE_VER = shell_exec("/etc/rc.d/rc.openvpnserver getonlineversion");
$OPEN_VPN_INSTALLED = shell_exec("/etc/rc.d/rc.openvpnserver getlocalversion");
$internet_myip = shell_exec("/var/local/emhttp/plugins/openvpnserver/check-my-ip.sh");
$LAN_IP = shell_exec("/etc/rc.d/rc.openvpnserver get_gw");
$VPN_SERVER_IP = shell_exec("/etc/rc.d/rc.openvpnserver get_vpnserver");
$check_netstat = shell_exec("ip route show");
$CHECK_PEM = shell_exec("/etc/rc.d/rc.openvpnserver check_pem");

 if (trim($CHECK_PEM) == "UPDATE" ){
 	echo '<script type="text/javascript">alert("You have revoked your firts client!, now you must update your openvpnserver.ovpn, you do that on the server config section on the plugin UI") </script>';
 	}

 if (file_exists('/var/local/emhttp/plugins/openvpnserver/add_client.log'))
 	{$add_client_log = file_get_contents('/var/local/emhttp/plugins/openvpnserver/add_client.log');} 
 	
 if (file_exists('/var/log/openvpnserver-status.log')) 
   {$openvpnststus_log = file_get_contents('/var/log/openvpnserver-status.log');} 

 if (file_exists('/var/log/openvpnserver.log')) 
   {$openvpn_log = file_get_contents('/var/log/openvpnserver.log');} 

?>		
<HTML>
<HEAD></HEAD>
<BODY>

<div style="width: 47%; float:left">
 <div id="title">
    <span class="left">Status:&nbsp;<img src='/boot/config/plugins/openvpnserver/device_status.png'>
      <?if ($openvpnserver_running=="yes"):?>
        <span class="green"><b>OpenVPN Server is RUNNING</b></span>
      <?else:?>
        <span class="red"><b>OpenVPN Server is NOT RUNNING</b></span>
      <?endif;?>
    </span>
  </div>
 
<br></br>
  
  <div style="border: 0px solid black;">
    <table>      
      <tr style="font-weight:bold; color:#333333; background:#F0F0F0; text-shadow:0 1px 1px #FFFFFF;">
        <td>Plugin / Build</td>
        <td>Local Version</td>
        <td>Online Version</td>
      </tr>
      <tr style="font-weight:bold; background:#FFFFFF;">
        <td>OpenVPN Server Plugin Version</td>
        <td>         
              <span class="green-text"><?=$openvpnserver_localplg?></span>        
        </td>
        <td>         
              <span class="green-text"><?=$openvpnserver_remoteplg?></span>
        </td>      
      </tr>      
      
      <tr style="font-weight:bold; background:#FFFFFF;">
        <td>OpenVPN Software Build</td>       
       <td>       
              <span class="green-text"><?=$OPEN_VPN_INSTALLED?></span>        
        </td>   
        <td>
              <span class="green-text"><?=$OPEN_VPN_ONLINE_VER?></span>
        </td>
      </tr>            
    </table>
  </div>  


<br></br>

<div style="border: 0px solid black;">
    <table>      
      <tr style="font-weight:bold; color:#333333; background:#F0F0F0; text-shadow:0 1px 1px #FFFFFF;">
        <td>WAN IP</td>
        <td>SERVER IP</td>
        <td>ROUTER IP</td>
        <td>VPN SERVER IP</td>
      </tr>
      <tr style="font-weight:bold; background:#FFFFFF;">
        <td>         
            <span class="green-text"><?=$internet_myip?></span>        
        </td>
        <td>         
            <span class="green-text"><?=$AUTO_SERVER_ADDR?></span>
        </td>      
        <td>         
            <span class="green-text"><?=$LAN_IP?></span>
        </td>      
        <td>         
            <span class="green-text"><?=$VPN_SERVER_IP?></span>
        </td>      

      </tr>      
    </table>
  </div>  
  <br></br>
  <div style="border: 0px solid black;">
    <table>      
      <tr style="font-weight:bold; color:#333333; background:#F0F0F0; text-shadow:0 1px 1px #FFFFFF;">
        <td>Valid user</td>
        <td>Revoked user</td>
         </tr>
          <tr style="font-weight:bold; background:#FFFFFF;">
         <td>         
          <span class="green-text"><?=$VALID_USER?></span>        
        </td>
         <td>         
          <span class="red-text"><?=$REVOKED_USER?></span>        
        </td>
      </tr>      
    </table>
  </div>  
<br></br>
<?if ($openvpnserver_running=="yes"):?>
  <div style="border: 0px solid black;">
    <table>      
      <tr style="font-weight:bold; color:#333333; background:#F0F0F0; text-shadow:0 1px 1px #FFFFFF;">
        <td>Online user</td>
         </tr>
             <tr style="font-weight:bold; background:#FFFFFF;">
             <td>         
             <span class="green-text"><?=$ONLINE_USER?></span>        
             </td>
             </tr>
    </table>
  </div>  
<br></br>
<?endif;?>      
<div>
<table>    
 <tr style="font-weight:bold; color:#333333; background:#F0F0F0; text-shadow:0 1px 1px #FFFFFF;">
        <td colspan="2">Control Actions</td>
      </tr>   
          
     <?if ($openvpnserver_running=="yes"):?>
        <tr>
        <td width="30%">
         <form name="stop_openvpnserver" method="POST" action="/update.htm" target="progressFrame">
          <input type="hidden" name="cmd" value="/etc/rc.d/rc.openvpnserver stop">
          <input type="submit" name="runCmd" value="Stop">
         </form>
        </td>
        <td> <span class="green-text">Stop OpenVPN ServerDaemon</span></td>
        </tr>
   
     <?else:?>
        <?if ($openvpnserver_config=="yes"):?> 
         <?if ($OPEN_VPN_INSTALLED!=""):?>
          </tr>
          <tr>
          <td width="30%">
            <form name="start_openvpnserver" method="POST" action="/update.htm" target="progressFrame">
                <input type="hidden" name="cmd" value="/etc/rc.d/rc.openvpnserver start">
                <input type="submit" name="runCmd" value="start">
            </form>
            </td>
            <td> <span class="red-text">Start Server OpenVPN Daemon</span></td>
            </tr>
         <?endif;?>
       <?endif;?>
     <?endif;?>
    </table>
  </div>
  <br></br>

<div>   
    <?if ($openvpnserver_running != "yes"):?>   
    <table>
      <tr style="font-weight:bold; color:#333333; background:#F0F0F0; text-shadow:0 1px 1px #FFFFFF;">
        <td colspan="2">Server configuration</td>
      </tr>
   
      <tr>
       <td width="30%">
        <form name="openvpnserver_installcert" method="POST" action="/update.htm" target="progressFrame">
          <input type="hidden" name="cmd" value="/etc/rc.d/rc.openvpnserver download_easy-rsa">
          <input type="submit" name="runCmd" value="Install RSA key management package (easy-rsa)">
        </form>
       </td>
         <?if ($ovpncertsoftware=="yes"):?>
              <td align="center" class="green-text"><b>&#10004</b></td>
              <td> <span class="green-text"></span></td>
         <?else:?> 	
              <td align="center" class="red-text"><b>&#10008</b></td>
        <?endif;?>
      </tr>
 
       <tr>
        <td width="30%">
         <form name="openvpnserver_create_server_cert" method="POST" action="/update.htm" target="progressFrame">
            <input type="hidden" name="cmd" value="/etc/rc.d/rc.openvpnserver create_server_cert">
            <input type="submit"  title="This will take a long time......"  name="runCmd" value="Generat server certificates and keys">
          </form>
        </td>
         <?if ($ovpncertsfolder=="yes"):?>
          <td align="center" class="green-text"><b>&#10004</b></td>
         	<td> <span class="green-text"></span></td>
         <?else:?> 	
         	<td align="center" class="red-text"><b>&#10008</b></td>
         <?endif;?>
       </tr>
        
       <td><b><span class="black-text">Server config file:</span></b></td>
          <?if ($openvpnserver_config=="yes"):?>
         	<td align="center" class="green-text"><b>&#10004</b></td>
         	<td> <span class="green-text"></span></td>
          <?else:?> 	
         	<td align="center" class="red-text"><b>&#10008</b></td>      	
         <?endif;?>
  <?endif;?>
 </table>
</div>

<br></br>  

<?if (($ovpncertsoftware=="yes") && ($ovpncertsfolder=="yes") && ($openvpnserver_config=="yes")):?> 
<?if ($openvpnserver_running != "yes"):?>  
<table>
    <tr style="font-weight:bold; color:#333333; background:#F0F0F0; text-shadow:0 1px 1px #FFFFFF;">
        <td colspan="2">Client configuration: Add or revoke client one by one</td>
      </tr>
<?endif;?>

	<form name="openvpnserver_newclient_settings" method="POST" action="/plugins/openvpnserver/openvpnserver_newclient_submit.php" target="progressFrame" onsubmit="validateForm_cert();">
	 <tr>
		<td>
		 <?if ($openvpnserver_running != "yes"):?>
   		 <input type="checkbox" title="When enabled this, you need to type in a password for the p12 file" name="IOS" id="IOS" onClick="IOSCheck(this)">  iOS compatible client cert 
		   <br></br>  
		   <input type="submit" value="Add client" style="height: 25px; width: 85px">
		   <input type="text" style="width:20%" maxlength="15" name="ADD_CLIENT" id="ADD_CLIENT">
   		 <input type="text" title="When typing in a password here, it will automatic create a pkcs12 file and a modified ovpn for the client" style="width:20%" maxlength="15" name="PASSWORD_PKCS12" id="PASSWORD_PKCS12" disabled="disabled">
		 <?endif;?>
		</td>
	 </tr>
	</form>
	
 <form name="openvpnserver_revoke_client_settings" method="POST" action="/plugins/openvpnserver/openvpnserver_revoke_client_submit.php" target="progressFrame" onsubmit="validateForm_cert();">
	<tr>
	 <td>
		 <?if ($openvpnserver_running != "yes"):?>
		   <input type="submit" title="When revoke a client,this will generate (or update) the crl.pem file in the keys directory, this file is found by the plugin, after the first revoke, you need to update your openvpnserver.ovpn file, it will add following line crl-verify crl.pem in your OpenVPN server config file, so that OpenVPN can reject any connections coming from clients which present a revoked certificate. You need to restart the server after first revoked client. After you done the revoke once, you don't need to restart the server when revoking next client." style="height: 25px; width: 85px" value="Revoke client">
		   <input type="text" title="When revoke a client,this will generate (or update) the crl.pem file in the keys directory, this file is found by the plugin, after the first revoke, you need to update your openvpnserver.ovpn file, it will add following line crl-verify crl.pem in your OpenVPN server config file, so that OpenVPN can reject any connections coming from clients which present a revoked certificate. You need to restart the server after first revoked client. After you done the revoke once, you don't need to restart the server when revoking next client." size="25" maxlength="25" name="REVOKE_CLIENT" id="REVOKE_CLIENT">	
		 <?endif;?>
	</td>
	</tr>	
 </form>

<?if ($openvpnserver_running != "yes"):?>  

<br></br>
	<tr>
	<td><textarea class="tooltip" title="OpenVPN log" wrap="hard" readonly="yes" style="width: 500px; height: 140px;color: blue;font-size: 8pt"><?php echo $openvpn_log; ?></textarea></td>
	</tr>
	<br></br>
  <?endif;?>		

  
<?if ($openvpnserver_running != "yes"):?>  
 	 <tr>
	 <td><textarea class="tooltip" title="OpenVPN add client log: when rovoke a client, you are geting an error on last line. That is what you want to see, as it indicates that a certificate verification of the revoked certificate failed" wrap="hard" readonly="yes" style="width: 500px; height: 160px;color: blue;font-size: 8pt"><?php echo $add_client_log; ?></textarea></td>
	 </tr>
  <?endif;?>
<?endif;?>

</table>

    
  <?if ($openvpnserver_running == "yes"):?>
    <div><left><b>To change configuration - Press Stop in "Control Action"</b></center></div>
     <div>
     <br></br>     
    	<tr>
      <td><textarea class="tooltip" title="Information from 'ip route show'  is displayed here.." wrap="hard" readonly="yes" style="width: 570px; height: 130px;color: blue;font-size: 8pt"><?php echo $check_netstat; ?></textarea></td>
	    </tr>
     </div>     
  <?endif;?>

       
 <?if ($openvpnserver_running != "yes"):?>
  <div id="title">
    <span class="left">Cert configuration settings :&nbsp;<img src='/boot/config/plugins/openvpnserver/New_config.png'>
  </div>
 
    <form name="openvpnserver_cert_settings" method="POST" action="/plugins/openvpnserver/openvpnserver_cert_submit.php" target="progressFrame" onsubmit="validateForm_cert();">

     <table>
      <tr>
       <td colspan="2" align="left">
     	  <?if ($openvpnserver_running != "yes"):?>
           <input type="submit" value="Save Below Configuration">
        <?endif;?>
       </td>
      </tr>
  
      <tr>
      <td>Path to store the cert's</td>
      <td>
      <input type="text" name="KEY_PATH" id="KEY_PATH" value="<?=$openvpnserver_cert_cfg['KEY_PATH'];?>" title="">
      </td>
      </tr>
      
      <tr>
      <td>Country</td>
      <td>
      <input type="text" name="KEY_COUNTRY" id="KEY_COUNTRY" style="width:7%" maxlength="2" value="<?=$openvpnserver_cert_cfg['KEY_COUNTRY'];?>" title="Default is ...">
      </td>
      </tr>  
 
      <tr>
      <td>Province</td>
      <td>
      <input type="text" name="KEY_PROVINCE" id="KEY_PROVINCE" style="width:47%" maxlength="20" value="<?=$openvpnserver_cert_cfg['KEY_PROVINCE'];?>" title="Default is ...">
      </td>
      </tr>   
      
      <tr>
      <td>City</td>
      <td>
      <input type="text" name="KEY_CITY" id="KEY_CITY" style="width:47%" maxlength="20" value="<?=$openvpnserver_cert_cfg['KEY_CITY'];?>" title="Default is ...">
      </td>
      </tr>   
  
      <tr>
      <td>Organisation</td>
      <td>
      <input type="text" name="KEY_ORG" id="KEY_ORG" style="width:47%" maxlength="20" value="<?=$openvpnserver_cert_cfg['KEY_ORG'];?>" title="Default is ...">
      </td>
      </tr>   
      
      <tr>
      <td>E-Mail</td>
      <td>
      <input type="text" name="KEY_EMAIL" id="KEY_EMAIL" style="width:62%" maxlength="30" value="<?=$openvpnserver_cert_cfg['KEY_EMAIL'];?>" title="Default is ...">
      </td>
      </tr>   
 
    </table>
 </form> 
<?endif;?>
</div> 

    
<div style="width: 47%; float:right; border: 0px solid black;">
   <div id="title">
     <span class="left">OpenVPN Server/Daemon Configuration:&nbsp;<img src='/boot/config/plugins/openvpnserver/New_config.png'>
    </div>  
    
 <div style="border: 0px solid black;">
   <table>
      <tr style="font-weight:bold; color:#333333; background:#F0F0F0; text-shadow:0 1px 1px #FFFFFF;">
      <td colspan="2">Updates</td>
      </tr>
      <?if (($openvpnserver_remoteplg != $openvpnserver_localplg) && ($openvpnserver_localplg != "Unknown") && ($openvpnserver_remoteplg != "Unknown")): ?>
        <tr>
        <td width="30%">
        <form name="openvpnserver_updateplg" method="POST" action="/update.htm" target="progressFrame">
         <input type="hidden" name="cmd" value="/etc/rc.d/rc.openvpnserver updateplg">
         <input type="submit" name="runCmd" value="Update Plugin">
        </form>
        </td>
        <td><span class="red-text">An update is available</span></td>
        </tr>
        <?$updates_exist="true"?>
      <?endif;?>

      <?if ($updates_exist=="false"):?>
        <tr>
         <td colspan="2" align="left">No updates available</td>
        </tr>
      <?endif;?>
   
    <br></br> 
        
 <? if (($openvpnserver_rollback=="yes") && ($updates_exist=="false")) : ?>
    <table>
	    <form name="openvpnserver_downgrade" method="POST" action="/update.htm" target="progressFrame">
	     <input type="hidden" name="cmd" value="/etc/rc.d/rc.openvpnserver downgradeplg">
       <input type="submit" name="runCmd" title="Downgrade to previuse plugin version"  value="Downgrade PLG">
	    </form>
   </div>
   </table>
 <?endif;?> 
</table>
</div>
  
 
  <?if ($openvpnserver_running == "yes"):?>
    <br></br> 
    <div><left><b>To change configuration - Press Stop in "Control Action"</b></center></div>
  <?endif;?>

<div>  
<form name="openvpnserver_settings" method="POST" action="/plugins/openvpnserver/openvpnserver_submit.php" target="progressFrame" onsubmit="validateForm();">
 <table>   
   <?if ($openvpnserver_running != "yes"):?> 
    
    
      <tr>
      <td colspan="2" align="left">
       <?if ($openvpnserver_running != "yes"):?>
        <input type="submit" value="Save Below Configuration" title="The openvpnserver.conf will automaticly be created / updated when saving">
       <?endif;?>
      </td>
      </tr>
        
      <tr>
      <td>Start OpenVPN server during array mount</td>
      <td>
      <select name="INSTALL_ON_BOOT" id="INSTALL_ON_BOOT" size="1">
      <?=mk_option($openvpnserver_cfg['INSTALL_ON_BOOT'], "enable", "Yes");?>
      <?=mk_option($openvpnserver_cfg['INSTALL_ON_BOOT'], "disable", "No");?>
      </select>
      </td>
      </tr>
      
      <tr>
	<td>Disconnect OpenVPN Server when stopping array</td>
	<td>
	<select name="DISCONNECT_ON_UMOUNT" id="DISCONNECT_ON_UMOUNT" size="1">
	<?=mk_option($openvpnserver_cfg['DISCONNECT_ON_UMOUNT'], "no", "No");?>
	<?=mk_option($openvpnserver_cfg['DISCONNECT_ON_UMOUNT'], "yes", "Yes");?>
	</select>
	</td>         
	<tr>   
      
      <tr>
      <td>Path to store server config and cert's</td>
      <td>
      <input type="text" name="SERVER_PATH" id="SERVER_PATH" value="<?=$openvpnserver_cfg['SERVER_PATH'];?>" title="">
      </td>
      </tr>   
            
      <tr>
      <td>Server mode</td>
      <td><select name="SERVER_MODE" title="will create a routed IP tunnel" id="SERVER_MODE" size="1">
      <?=mk_option($openvpnserver_cfg['SERVER_MODE'], "tun", "Tun");?>
      </select></td>
      </tr>
      
      <tr>
      <td>Dynamic DNS</td>
      <td>
      <input type="text" style="width:55%" maxlength="25" name="CANONICAL" id="CANONICAL" value="<?=$openvpnserver_cfg['CANONICAL'];?>" title="If you have a URL (like DynDNS), you can enter it here, this will overide your WAN IP in client config files">
      </td>
      </tr> 
     
      <tr>
      <td>VPN subnet for OpenVPN server</td>
      <td>
      <input type="text" style="width:25%" maxlength="15" name="NETWORK" id="NETWORK" value="<?=$openvpnserver_cfg['NETWORK'];?>" title="Default is 10.8.0.0 (for routing), but can be set to any IP you like for the VPN server">
      </td>
      </tr> 
      
      <tr>
      <td>Netmask</td>
      <td>
      <input type="text" style="width:25%" maxlength="15" name="NETMASK" id="NETMASK" value="<?=$openvpnserver_cfg['NETMASK'];?>" title="Default is 255.255.255.0">
      </td>
      </tr> 
      
      <tr>
      <td>Allow Client to Client</td>
      <td><select name="CLIENT" id="CLIENT" size="1">
      <?=mk_option($openvpnserver_cfg['CLIENT'], "Enable", "Yes");?>
      <?=mk_option($openvpnserver_cfg['CLIENT'], "", "No");?>
      </select></td>
      </tr>   
      
      <tr>
      <td>Push DHCP 1</td>
      <td><select name="DHCP_1" id="DHCP_1" size="1">
      <?=mk_option($openvpnserver_cfg['DHCP_1'], "dhcp-option DNS 8.8.8.8", "dhcp-option DNS 8.8.8.8");?>
      <?=mk_option($openvpnserver_cfg['DHCP_1'], "", "No");?>
      </select></td>
      </tr>

      <tr>
      <td>Push DHCP 2</td>
      <td><select name="DHCP_2" id="DHCP_2" size="1">
      <?=mk_option($openvpnserver_cfg['DHCP_2'], "dhcp-option DNS 8.8.4.4", "dhcp-option DNS 8.8.4.4");?>
      <?=mk_option($openvpnserver_cfg['DHCP_2'], "", "No");?>
      </select></td>
      </tr>
  
      <tr>
      <td><a <span class="classic">Port for the server</span></a></td>
      <td>
      <input type="text" style="width:17%" maxlength="5" name="SERVER_PORT" id="SERVER_PORT" value="<?=$openvpnserver_cfg['SERVER_PORT'];?>" title="You will need to open up this port on your firewall or router">
      </td>
      </tr> 

      <tr>
      <td>Tunnel Protocol</td>
      <td><select name="PROTOCOL" id="PROTOCOL" size="1">
      <?=mk_option($openvpnserver_cfg['PROTOCOL'], "udp", "UDP");?>
      <?=mk_option($openvpnserver_cfg['PROTOCOL'], "tcp", "TCP");?>
      </select></td>
      </tr>
      
      <tr>
      <td>Encryption Cipher</td>
      <td><select name="CHIPHER" id="CHIPHER" size="1">
      <?=mk_option($openvpnserver_cfg['CHIPHER'], "cipher aes-512-cbc", "AES-512 CBC");?>
      <?=mk_option($openvpnserver_cfg['CHIPHER'], "cipher aes-256-cbc", "AES-256 CBC");?>
      <?=mk_option($openvpnserver_cfg['CHIPHER'], "cipher bf-cbc", "Blowfish CBC");?>
      <?=mk_option($openvpnserver_cfg['CHIPHER'], "", "None");?>
      </select></td>
      </tr>
      
      <tr>
      <td>Hash Algorithm</td>
      <td><select name="HASH_ALGO" id="HASH_ALGO" size="1">
      <?=mk_option($openvpnserver_cfg['HASH_ALGO'], "auth sha512", "SHA512");?>
      <?=mk_option($openvpnserver_cfg['HASH_ALGO'], "auth sha256", "SHA256");?>
      <?=mk_option($openvpnserver_cfg['HASH_ALGO'], "", "None");?>
      </select></td>
      </tr>
           
      <tr>
      <td>ifconfig-pool-persist ipp.txt</td>
      <td><select name="IPP" id="IPP" title="Maintain a record of client  virtual IP address associations in this file.If OpenVPN goes down or is restarted, reconnecting clients can be assigned the same virtual IP address from the pool that was previously assigned."  size="1">
      <?=mk_option($openvpnserver_cfg['IPP'], "ipp.txt", "Yes");?>
      <?=mk_option($openvpnserver_cfg['IPP'], "", "No");?>
      </select></td>
      </tr>           
                   
      <tr>
      <td>Redirect-gateway </td>
      <td><select name="GATEWAY" id="GATEWAY" size="1">
      <?=mk_option($openvpnserver_cfg['GATEWAY'], "redirect-gateway", "redirect-gateway");?>
      <?=mk_option($openvpnserver_cfg['GATEWAY'], "redirect-gateway def1", "redirect-gateway def1");?>
      <?=mk_option($openvpnserver_cfg['GATEWAY'], "redirect-gateway def1 bypass-dhcp", "redirect-gateway def1 bypass-dhcp");?>
      <?=mk_option($openvpnserver_cfg['GATEWAY'], "Disable", "No");?>
      </select></td>
      </tr>   
     
      <tr>
      <td>Topology subnet</td>
      <td><select name="SUBNET" id="SUBNET" size="1">
      <?=mk_option($openvpnserver_cfg['SUBNET'], "topology subnet", "Yes");?>
      <?=mk_option($openvpnserver_cfg['SUBNET'], "Disable", "No");?>
      </select></td>
      </tr>   
       
      <tr>
      <td>Push LAN subnet to the clients</td>
      <td><select name="LAN_SUBNET" id="LAN_SUBNET" size="1">
      <?=mk_option($openvpnserver_cfg['LAN_SUBNET'], "Enable", "Yes");?>
      <?=mk_option($openvpnserver_cfg['LAN_SUBNET'], "Disable", "No");?>
      </select></td>
      </tr>   
            
      <tr>
      <td>COMP LZO</td>
      <td><select name="COMP_LZO" id="COMP_LZO" size="1">
      <?=mk_option($openvpnserver_cfg['COMP_LZO'], "comp-lzo", "Yes");?>
      <?=mk_option($openvpnserver_cfg['COMP_LZO'], "0", "No");?>
      </select></td>
      </tr>
      
      <tr>
      <td>TELNET management console</td>
      <td><select name="TELNET_CONSOLE" id="TELNET_CONSOLE" title="This will get you acess to an TELNET console on UnRAid IP port 5902. Acessing the console, use Putty" size="1">
      <?=mk_option($openvpnserver_cfg['TELNET_CONSOLE'], "No", "No");?>
      <?=mk_option($openvpnserver_cfg['TELNET_CONSOLE'], "yes", "Yes");?>
      </select></td>
      </tr>
      
      <br></br> 
      
      
<?endif;?>
     
 <div>
  <tr>
   <?if ($openvpnserver_running=="yes"):?>
    <tr>
     <td><textarea class="tooltip" title="OpenVPN status" wrap="hard" readonly="yes" style="width: 580px; height: 160px;color: blue;font-size: 8pt"><?php echo $openvpnststus_log; ?></textarea></td>
    </tr>

     <br></br>
	<tr>
	<td><textarea class="tooltip" title="OpenVPN log" wrap="hard" readonly="yes" style="width: 580px; height: 160px;color: blue;font-size: 8pt"><?php echo $openvpn_log; ?></textarea></td>
	</tr>
	<br></br>
    <?endif;?>

   </tr>
  </div>     
  <br></br>
 </table>
</form>

<script type="text/javascript">

function IOSCheck(what){ 
    if(what.checked){document.openvpnserver_newclient_settings.PASSWORD_PKCS12.disabled=0} 
    else
    {document.openvpnserver_newclient_settings.PASSWORD_PKCS12.disabled=1
    document.openvpnserver_newclient_settings.PASSWORD_PKCS12.value=""
    }
} 

function validateForm() {
  document.getElementById('INSTALL_ON_BOOT').disabled = false;
  document.getElementById('DISCONNECT_ON_UMOUNT').disabled = false;
  document.getElementById('SERVER_PATH').disabled = false;
  document.getElementById('SERVER_MODE').disabled = false;
  document.getElementById('NETWORK').disabled = false;
  document.getElementById('NETMASK').disabled = false;
  document.getElementById('SERVER_PORT').disabled = false;
  document.getElementById('CANONICAL').disabled = false;
  document.getElementById('PROTOCOL').disabled = false;
  document.getElementById('CHIPHER').disabled = false;
  document.getElementById('CLIENT').disabled = false;
  document.getElementById('HASH_ALGO').disabled = false;
  document.getElementById('GATEWAY').disabled = false;
  document.getElementById('SUBNET').disabled = false;
  document.getElementById('LAN_SUBNET').disabled = false;
  document.getElementById('COMP_LZO').disabled = false;
  document.getElementById('IPP').disabled = false;
  document.getElementById('DHCP_1').disabled = false;
  document.getElementById('DHCP_2').disabled = false;
  document.getElementById('TELNET_CONSOLE').disabled = false;
  
  
 
}


function validateForm_cert() {

  document.getElementById('KEY_COUNTRY').disabled = false;
  document.getElementById('KEY_PROVINCE').disabled = false;
  document.getElementById('KEY_CITY').disabled = false;
  document.getElementById('KEY_ORG').disabled = false;
  document.getElementById('KEY_EMAIL').disabled = false;
  document.getElementById('KEY_PATH').disabled = false;  
  
}

function checkRUNNING(form) {
  if ("<?=$openvpnserver_running?>" == "yes") {
  
    form.INSTALL_ON_BOOT.disabled = true;
    form.DISCONNECT_ON_UMOUNT.disabled = true;
    form.SERVER_PATH.disabled = true;
    form.SERVER_MODE.disabled = true;
    form.NETWORK.disabled = true;
    form.NETMASK.disabled = true;
    form.SERVER_PORT.disabled = true;
    form.CANONICAL.disabled = true;
    form.PROTOCOL.disabled = true;
    form.CHIPHER.disabled = true;
    form.CLIENT.disabled = true;
    form.HASH_ALGO.disabled = true;
    form.GATEWAY.disabled = true;
    form.SUBNET.disabled = true;
    form.LAN_SUBNET.disabled = true;
    form.COMP_LZO.disabled = true;
    form.IPP.disabled = true;
    form.DHCP_1.disabled = true;
    form.DHCP_2.disabled = true;
    form.TELNET_CONSOLE.disabled = true;
    form.KEY_COUNTRY.disabled = true;
    form.KEY_PROVINCE.disabled = true;
    form.KEY_CITY.disabled = true;
    form.KEY_ORG.disabled = true;
    form.KEY_EMAIL.disabled = true;
    form.KEY_PATH.disabled = true;
     
  }
}
</script>

</BODY>
</HTML>

]]>
</INLINE>
</FILE>

<!-- event handler -->

<FILE Name="/usr/local/emhttp/plugins/openvpnserver/event/disks_mounted" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/bash
source /boot/config/plugins/openvpnserver/openvpnserver.cfg
if [ $INSTALL_ON_BOOT = "enable" ]; then	
	/etc/rc.d/rc.openvpnserver start
fi	
]]>
</INLINE>
</FILE>

<!-- event handler -->
<FILE Name="/usr/local/emhttp/plugins/openvpnserver/event/unmounting_disks" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/bash
if [[ $DISCONNECT_ON_UMOUNT == "yes" ]]; then
        /etc/rc.d/rc.openvpnserver stop
fi
]]>
</INLINE>
</FILE>

<FILE Name="/var/log/plugins/openvpnserver">
<INLINE>
<![CDATA[

]]>
</INLINE>
</FILE>

############################################
# WEBUI Revoke client
############################################
<FILE Name="/usr/local/emhttp/plugins/openvpnserver/openvpnserver_revoke_client_submit.php">
<INLINE>
<![CDATA[

<?PHP
$REVOKE_A_CLIENT = $_POST['REVOKE_CLIENT'];
echo "Please wait while revoking client...";
shell_exec("/etc/rc.d/rc.openvpnserver revoke_client $REVOKE_A_CLIENT >/var/local/emhttp/plugins/openvpnserver/add_client.log 2>&1");
?>
<HTML>
<HEAD><SCRIPT>var goback=parent.location;</SCRIPT></HEAD>
<BODY onLoad="parent.location=goback;"</BODY>
</HTML>
]]>
</INLINE>
</FILE>


############################################
# WEBUI Submit new client
############################################
<FILE Name="/usr/local/emhttp/plugins/openvpnserver/openvpnserver_newclient_submit.php">
<INLINE>
<![CDATA[

<?PHP
$ADD_NEW_CLIENT = $_POST['ADD_CLIENT'];
$NEW_PASSWORD_PKCS12 = $_POST['PASSWORD_PKCS12'];
echo "Please wait while adding new client...";
shell_exec("/etc/rc.d/rc.openvpnserver add_client $ADD_NEW_CLIENT $NEW_PASSWORD_PKCS12  >/var/local/emhttp/plugins/openvpnserver/add_client.log 2>&1");
?>
<HTML>
<HEAD><SCRIPT>var goback=parent.location;</SCRIPT></HEAD>
<BODY onLoad="parent.location=goback;"</BODY>
</HTML>
]]>
</INLINE>
</FILE>

############################################
# WEBUI Submit page
############################################
<FILE Name="/usr/local/emhttp/plugins/openvpnserver/openvpnserver_submit.php">
<INLINE>
<![CDATA[

<?PHP

$INSTALL_ON_BOOT = $_POST['INSTALL_ON_BOOT'];
$DISCONNECT_ON_UMOUNT = $_POST['DISCONNECT_ON_UMOUNT'];
$SERVER_PATH = $_POST['SERVER_PATH'];
$SERVER_MODE = $_POST['SERVER_MODE'];
$NETWORK = $_POST['NETWORK'];
$NETMASK = $_POST['NETMASK'];
$SERVER_PORT = $_POST['SERVER_PORT'];
$CANONICAL = $_POST['CANONICAL'];
$PROTOCOL = $_POST['PROTOCOL'];
$CHIPHER = $_POST['CHIPHER'];
$CLIENT = $_POST['CLIENT'];
$HASH_ALGO = $_POST['HASH_ALGO'];
$GATEWAY = $_POST['GATEWAY'];
$SUBNET = $_POST['SUBNET'];
$LAN_SUBNET = $_POST['LAN_SUBNET'];
$COMP_LZO = $_POST['COMP_LZO'];
$IPP = $_POST['IPP'];
$DHCP_1 = $_POST['DHCP_1'];
$DHCP_2 = $_POST['DHCP_2'];
$TELNET_CONSOLE = $_POST['TELNET_CONSOLE'];


$arguments = "";
$arguments .= "INSTALL_ON_BOOT_NEW=\"$INSTALL_ON_BOOT\"\n";
$arguments .= "DISCONNECT_ON_UMOUNT_NEW=\"$DISCONNECT_ON_UMOUNT\"\n";
$arguments .= "SERVER_PATH_NEW=\"$SERVER_PATH\"\n";
$arguments .= "SERVER_MODE_NEW=\"$SERVER_MODE\"\n";
$arguments .= "NETWORK_NEW=\"$NETWORK\"\n";
$arguments .= "NETMASK_NEW=\"$NETMASK\"\n";
$arguments .= "SERVER_PORT_NEW=\"$SERVER_PORT\"\n";
$arguments .= "CANONICAL_NEW=\"$CANONICAL\"\n";
$arguments .= "PROTOCOL_NEW=\"$PROTOCOL\"\n";
$arguments .= "CHIPHER_NEW=\"$CHIPHER\"\n";
$arguments .= "CLIENT_NEW=\"$CLIENT\"\n";
$arguments .= "HASH_ALGO_NEW=\"$HASH_ALGO\"\n";
$arguments .= "GATEWAY_NEW=\"$GATEWAY\"\n";
$arguments .= "SUBNET_NEW=\"$SUBNET\"\n";
$arguments .= "LAN_SUBNET_NEW=\"$LAN_SUBNET\"\n";
$arguments .= "COMP_LZO_NEW=\"$COMP_LZO\"\n";
$arguments .= "IPP_NEW=\"$IPP\"\n";
$arguments .= "DHCP_1_NEW=\"$DHCP_1\"\n";
$arguments .= "DHCP_2_NEW=\"$DHCP_2\"\n";
$arguments .= "TELNET_CONSOLE_NEW=\"$TELNET_CONSOLE\"\n";

echo "Please wait while updating configuration...";

$file = "/usr/local/emhttp/plugins/openvpnserver/openvpnserver.args";
file_put_contents($file, $arguments);
shell_exec("/etc/rc.d/rc.openvpnserver updatecfg");
shell_exec("/etc/rc.d/rc.openvpnserver writeconf");

?>

<HTML>
<HEAD><SCRIPT>var goback=parent.location;</SCRIPT></HEAD>
<BODY onLoad="parent.location=goback;"</BODY>
</HTML>

]]>
</INLINE>
</FILE>

############################################
# WEBUI Submit page
############################################
<FILE Name="/usr/local/emhttp/plugins/openvpnserver/openvpnserver_cert_submit.php">
<INLINE>
<![CDATA[

<?PHP
 
$KEY_COUNTRY = $_POST['KEY_COUNTRY'];
$KEY_PROVINCE = $_POST['KEY_PROVINCE'];
$KEY_CITY = $_POST['KEY_CITY'];
$KEY_ORG = $_POST['KEY_ORG'];
$KEY_EMAIL = $_POST['KEY_EMAIL'];
$KEY_PATH = $_POST['KEY_PATH'];

$arguments = "";
$arguments .= "KEY_COUNTRY_NEW=\"$KEY_COUNTRY\"\n";
$arguments .= "KEY_PROVINCE_NEW=\"$KEY_PROVINCE\"\n";
$arguments .= "KEY_CITY_NEW=\"$KEY_CITY\"\n";
$arguments .= "KEY_ORG_NEW=\"$KEY_ORG\"\n";
$arguments .= "KEY_EMAIL_NEW=\"$KEY_EMAIL\"\n";
$arguments .= "KEY_PATH_NEW=\"$KEY_PATH\"\n";

echo "Please wait while updating configuration for certs...";

$file = "/usr/local/emhttp/plugins/openvpnserver/openvpnserver_cert.args";
file_put_contents($file, $arguments);
shell_exec("/etc/rc.d/rc.openvpnserver updatecfg_cert");

?>

<HTML>
<HEAD><SCRIPT>var goback=parent.location;</SCRIPT></HEAD>
<BODY onLoad="parent.location=goback;"</BODY>
</HTML>

]]>
</INLINE>
</FILE>
</PLUGIN>
